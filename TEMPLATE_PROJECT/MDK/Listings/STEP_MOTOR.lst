C251 COMPILER V5.60.0,  STEP_MOTOR                                                         10/01/22  23:01:37  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STEP_MOTOR
OBJECT MODULE PLACED IN ..\Output\STEP_MOTOR.obj
COMPILER INVOKED BY: F:\ProgramData\keil5\C251\BIN\C251.EXE ..\CODES\DRIVER\STEP_MOTOR.c LARGE INTR2 BROWSE INCDIR(..\CO
                    -DES\BOARD;..\CODES\ALGORITHM;..\CODES\DRIVER;..\CODES\USERS;..\CODES\ZF_lib) DEBUG PRINT(.\Listings\STEP_MOTOR.lst) OBJE
                    -CT(..\Output\STEP_MOTOR.obj) 

stmt  level    source

    1          /*
    2           * @Description  : æ­¥è¿›ç”µæœºæŽ§åˆ¶å®žçŽ°
    3           * @Author       : FZU Liao
    4           * @Date         : 2022-01-03 15:48:25
    5           * @LastEditors  : Liao
    6           * @LastEditTime : 2022-01-09 22:25:11
    7           * @FilePath     : \TEMPLATE_PROJECT\CODES\DRIVER\STEP_MOTOR.c
    8           * Copyright 2022 FZU Liao, All Rights Reserved. 
    9           */
   10          
   11          //æ­¥è¿›ç”µæœºæŽ§åˆ¶èŠ¯ç‰‡HIP4082çœŸå€¼è¡¨
   12          /*â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â
             -€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
   13           |  | ALI | BLI |   | ALO | AHO | BLO | BHO | |  STATE  |
   14           |  â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€
             -”â€”â€”â€”â€”â€”â€”â€” | â€”â€”â€”â€”â€”â€”â€” |
   15           |  |  1  |  0  |   |  1  |  0  |  0  |  1  | | FORWARD |
   16           |  â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€
             -”â€”â€”â€”â€”â€”â€”â€” | â€”â€”â€”â€”â€”â€”â€” |
   17           |  |  0  |  1  |   |  0  |  1  |  1  |  0  | |   BACK  |
   18           |  â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€
             -”â€”â€”â€”â€”â€”â€”â€” | â€”â€”â€”â€”â€”â€”â€” |
   19           |  |  1  |  1  |   |  1  |  0  |  1  |  0  | |   STOP  | 
   20           |  â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€
             -”â€”â€”â€”â€”â€”â€”â€” | â€”â€”â€”â€”â€”â€”â€” |
   21           |  |  0  |  0  |   |  0  |  1  |  0  |  1  | |   NULL  |
   22          â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
             -â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”*/
   23          
   24          #include "STEP_MOTOR.h"
   25          #include "DELAY.h"
   26          
   27          void STEP_MOTOR_INIT(STEP_MOTOR* MOTOR,PWM_CHANNEL_enum ALI,PWM_CHANNEL_enum BLI){
   28   1          MOTOR->MOTOR_PWM_Duty = 0;
   29   1          MOTOR->MOTOR_ALI = ALI;
   30   1          MOTOR->MOTOR_BLI = BLI;
   31   1          PWM_INIT_PWMCHANNEL(ALI,200,0);
   32   1          PWM_INIT_PWMCHANNEL(BLI,200,0);
   33   1      }
   34          
   35          void STEP_MOTOR_SET_DUTY(STEP_MOTOR* MOTOR,uint16 Duty){
   36   1          if(Duty > STEP_MOTOR_MAX_DUTY) Duty = STEP_MOTOR_MAX_DUTY;
   37   1          MOTOR->MOTOR_PWM_Duty = Duty;
   38   1          PWM_SET_DUTY(MOTOR->MOTOR_ALI,Duty);
   39   1          PWM_SET_DUTY(MOTOR->MOTOR_BLI,Duty);
   40   1      }
   41          
   42          void STEP_MOTOR_FORWARD(STEP_MOTOR* MOTOR){
   43   1          if(MOTOR->STATUS == STATUS_FORWARD) return;
   44   1          PWM_DISABLE(MOTOR->MOTOR_ALI);
   45   1          PWM_DISABLE(MOTOR->MOTOR_BLI);
   46   1          DELAY_us(500);
   47   1          MOTOR->STATUS = STATUS_FORWARD;
   48   1          PWM_ENABLE(MOTOR->MOTOR_ALI);
   49   1      }
   50          
   51          void STEP_MOTOR_STOP(STEP_MOTOR* MOTOR){
C251 COMPILER V5.60.0,  STEP_MOTOR                                                         10/01/22  23:01:37  PAGE 2   

   52   1          if(MOTOR->STATUS == STATUS_STOP) return;
   53   1          PWM_DISABLE(MOTOR->MOTOR_ALI);
   54   1          PWM_DISABLE(MOTOR->MOTOR_BLI);
   55   1          DELAY_us(500);
   56   1          MOTOR->STATUS = STATUS_STOP;
   57   1          PWM_ENABLE(MOTOR->MOTOR_ALI);
   58   1          PWM_ENABLE(MOTOR->MOTOR_BLI);
   59   1      }
   60          
   61          void STEP_MOTOR_BACK(STEP_MOTOR* MOTOR){
   62   1          if(MOTOR->STATUS == STATUS_BACK) return;
   63   1          PWM_DISABLE(MOTOR->MOTOR_ALI);
   64   1          PWM_DISABLE(MOTOR->MOTOR_BLI);
   65   1          DELAY_us(500);
   66   1          MOTOR->STATUS = STATUS_BACK;
   67   1          PWM_ENABLE(MOTOR->MOTOR_BLI);
   68   1      }
   69          
   70          STEP_MOTOR_STATUS STEP_MOTOR_READ_STATUS(STEP_MOTOR* MOTOR){
   71   1          return MOTOR->STATUS;
   72   1      }
   73          
   74          uint32 STEP_MOTOR_GET_DUTY(STEP_MOTOR* MOTOR){
   75   1          return MOTOR->MOTOR_PWM_Duty;
   76   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       293     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------          4
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
